#lang sicp
(define tolerance 0.0001)
(define (fixed-point f first-guess)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) 
       tolerance))
  (define (disp guess n)
    (display "Step ")
    (display n)
    (display " = ")
    (display guess)
    (newline))
  (define (try guess n)
    (let ((next (f guess)))
      (if (close-enough? guess next)
          (disp next n)
          (try next (+ n 1)))))
  (try first-guess 1))
(define (average a b) (/ (+ a b) 2))
(define (my-f x) (/ (log 1000) (log x)))

(fixed-point my-f 1.5)
(fixed-point (lambda (x) (average x (my-f x))) 1.5)
