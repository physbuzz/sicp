37a38,39
> ;; === Start of Unchanged Book Code ===
> 
57,64c59
< (define (my-add-one x) (+ x 1))
< 
< (put 'inc '(my) my-add-one)
< 
< (apply-generic 'inc (attach-tag 'my 10))
< 
< 
< 
---
> (define (square x) (* x x)) ;; Needed by install-polar-package
65a61,107
> (define (install-polar-package)
>   ;; internal procedures
>   (define (magnitude z) (car z))
>   (define (angle z) (cdr z))
>   (define (make-from-mag-ang r a) (cons r a))
>   (define (real-part z)
>     (* (magnitude z) (cos (angle z))))
>   (define (imag-part z)
>     (* (magnitude z) (sin (angle z))))
>   (define (make-from-real-imag x y)
>     (cons (sqrt (+ (square x) (square y)))
>           (atan y x)))
>   ;; interface to the rest of the system
>   (define (tag x) (attach-tag 'polar x))
>   (put 'real-part '(polar) real-part)
>   (put 'imag-part '(polar) imag-part)
>   (put 'magnitude '(polar) magnitude)
>   (put 'angle '(polar) angle)
>   (put 'make-from-real-imag 'polar
>        (lambda (x y)
>          (tag (make-from-real-imag x y))))
>   (put 'make-from-mag-ang 'polar
>        (lambda (r a)
>          (tag (make-from-mag-ang r a))))
>   'done)
> 
> (define (make-from-mag-ang r a)
>   ((get 'make-from-mag-ang
>         'polar)
>    r a))
> 
> ;; === End of Unchanged Book Code ===
> 
> 
> ;; --- Minimal Example Usage ---
> 
> (install-polar-package) ;; Run the installation
> 
> ;; Example call using the constructor definition from the book
> (define polar-num (make-from-mag-ang (sqrt 2.0) (/ 3.14159 4.0)))
> 
> (display polar-num) ;; Show the result
> (newline)
> (display (type-tag polar-num))
> (newline)
> (display (contents polar-num))
> (newline)
